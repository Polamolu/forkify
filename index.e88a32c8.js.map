{"mappings":"A,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,S,E,C,E,O,G,E,U,C,E,O,C,C,C,IKoPQ,EAQA,E,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,E,Q,C,Q,S,C,C,C,E,E,E,O,C,W,I,E,A,G,E,G,E,E,O,C,U,I,E,A,G,E,GJ1PR,IAcA,EACA,EAfI,EAAU,CAAC,EAcf,EAbA,SAAkB,CAAK,EAErB,IAAK,IADD,EAAO,OAAO,IAAA,CAAK,GACd,EAAI,EAAG,EAAI,EAAK,MAAA,CAAQ,IAC/B,CAAO,CAAC,CAAI,CAAC,EAAE,CAAC,CAAG,CAAK,CAAC,CAAI,CAAC,EAAE,CAAC,AAErC,EASA,EARA,SAAiB,CAAE,EACjB,IAAI,EAAW,CAAO,CAAC,EAAG,CAC1B,GAAI,AAAY,MAAZ,EACF,MAAM,AAAI,MAAM,oCAAsC,GAExD,OAAO,CACT,C,GCfA,AAAA,EAAA,SAAA,QAAA,CAA8C,KAAK,KAAA,CAAM,iG,I,E,C,EEAzD,EAAiB,IAAA,IAAoB,AAAA,EAAA,SAAA,OAAA,CAA6C,SAAA,YAAA,GAAA,EAAU,QAA5F,GC4HA,AArDA,CAAA,SAAW,SAAS,CAAS,CAAE,CAAW,EAGtC,GAAI,AAAqB,KAAA,IAAd,GAA6B,EAChC,AAAsB,UAAtB,OAAO,GAA2B,AAAwB,UAAxB,OAAO,GACzC,IAAI,CAAC,SAAA,CAAY,EACjB,IAAI,CAAC,WAAA,CAAc,GACU,UAAtB,OAAO,GAA2B,AAAwB,UAAxB,OAAO,IAIhD,IAAI,CAAC,SAAA,CAAY,SAAS,GAC1B,IAAI,CAAC,WAAA,CAAc,SAAS,SAG7B,GAAI,AAAuB,KAAA,IAAhB,GAEd,GAAI,AAAgB,UAAhB,MADJ,CAAA,I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","sources":["<anon>","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-552fcf0be4b79281.js","src/js/controller.js","node_modules/@parcel/runtime-js/lib/runtime-644f02e9c3f5eee3.js","node_modules/fractional/index.js"],"sourcesContent":["function $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $parcel$global =\ntypeof globalThis !== 'undefined'\n  ? globalThis\n  : typeof self !== 'undefined'\n  ? self\n  : typeof window !== 'undefined'\n  ? window\n  : typeof global !== 'undefined'\n  ? global\n  : {};\nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire3a11\"];\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire3a11\"] = parcelRequire;\n}\nparcelRequire.register(\"27Lyk\", function(module, exports) {\n\n$parcel$export(module.exports, \"register\", () => $18c11f3350a906ea$export$6503ec6e8aabbaf, (v) => $18c11f3350a906ea$export$6503ec6e8aabbaf = v);\n$parcel$export(module.exports, \"resolve\", () => $18c11f3350a906ea$export$f7ad0328861e2f03, (v) => $18c11f3350a906ea$export$f7ad0328861e2f03 = v);\nvar $18c11f3350a906ea$export$6503ec6e8aabbaf;\nvar $18c11f3350a906ea$export$f7ad0328861e2f03;\n\"use strict\";\nvar $18c11f3350a906ea$var$mapping = {};\nfunction $18c11f3350a906ea$var$register(pairs) {\n    var keys = Object.keys(pairs);\n    for(var i = 0; i < keys.length; i++)$18c11f3350a906ea$var$mapping[keys[i]] = pairs[keys[i]];\n}\nfunction $18c11f3350a906ea$var$resolve(id) {\n    var resolved = $18c11f3350a906ea$var$mapping[id];\n    if (resolved == null) throw new Error(\"Could not resolve bundle with id \" + id);\n    return resolved;\n}\n$18c11f3350a906ea$export$6503ec6e8aabbaf = $18c11f3350a906ea$var$register;\n$18c11f3350a906ea$export$f7ad0328861e2f03 = $18c11f3350a906ea$var$resolve;\n\n});\n\nvar $0056b85d938852dc$exports = {};\n\n(parcelRequire(\"27Lyk\")).register(JSON.parse('{\"f9fpV\":\"index.e88a32c8.js\",\"hfd23\":\"icons.c14567a0.svg\"}'));\n\nvar $cb59c201e168fdfe$exports = {};\n\n$cb59c201e168fdfe$exports = new URL((parcelRequire(\"27Lyk\")).resolve(\"hfd23\"), import.meta.url).toString();\n\n\n/*\nfraction.js\nA Javascript fraction library.\n\nCopyright (c) 2009  Erik Garrison <erik@hypervolu.me>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n*/ /* Fractions */ /* \n *\n * Fraction objects are comprised of a numerator and a denomenator.  These\n * values can be accessed at fraction.numerator and fraction.denomenator.\n *\n * Fractions are always returned and stored in lowest-form normalized format.\n * This is accomplished via Fraction.normalize.\n *\n * The following mathematical operations on fractions are supported:\n *\n * Fraction.equals\n * Fraction.add\n * Fraction.subtract\n * Fraction.multiply\n * Fraction.divide\n *\n * These operations accept both numbers and fraction objects.  (Best results\n * are guaranteed when the input is a fraction object.)  They all return a new\n * Fraction object.\n *\n * Usage:\n *\n * TODO\n *\n */ /*\n * The Fraction constructor takes one of:\n *   an explicit numerator (integer) and denominator (integer),\n *   a string representation of the fraction (string),\n *   or a floating-point number (float)\n *\n * These initialization methods are provided for convenience.  Because of\n * rounding issues the best results will be given when the fraction is\n * constructed from an explicit integer numerator and denomenator, and not a\n * decimal number.\n *\n *\n * e.g. new Fraction(1, 2) --> 1/2\n *      new Fraction('1/2') --> 1/2\n *      new Fraction('2 3/4') --> 11/4  (prints as 2 3/4)\n *\n */ var $d6b4c6d58e0c0c19$export$b336c2702c498be5;\nFraction = function(numerator, denominator) {\n    /* double argument invocation */ if (typeof numerator !== \"undefined\" && denominator) {\n        if (typeof numerator === \"number\" && typeof denominator === \"number\") {\n            this.numerator = numerator;\n            this.denominator = denominator;\n        } else if (typeof numerator === \"string\" && typeof denominator === \"string\") {\n            // what are they?\n            // hmm....\n            // assume they are ints?\n            this.numerator = parseInt(numerator);\n            this.denominator = parseInt(denominator);\n        }\n    /* single-argument invocation */ } else if (typeof denominator === \"undefined\") {\n        num = numerator; // swap variable names for legibility\n        if (typeof num === \"number\") {\n            this.numerator = num;\n            this.denominator = 1;\n        } else if (typeof num === \"string\") {\n            var a, b; // hold the first and second part of the fraction, e.g. a = '1' and b = '2/3' in 1 2/3\n            // or a = '2/3' and b = undefined if we are just passed a single-part number\n            var arr = num.split(\" \");\n            if (arr[0]) a = arr[0];\n            if (arr[1]) b = arr[1];\n            /* compound fraction e.g. 'A B/C' */ //  if a is an integer ...\n            if (a % 1 === 0 && b && b.match(\"/\")) return new Fraction(a).add(new Fraction(b));\n            else if (a && !b) {\n                /* simple fraction e.g. 'A/B' */ if (typeof a === \"string\" && a.match(\"/\")) {\n                    // it's not a whole number... it's actually a fraction without a whole part written\n                    var f = a.split(\"/\");\n                    this.numerator = f[0];\n                    this.denominator = f[1];\n                /* string floating point */ } else if (typeof a === \"string\" && a.match(\".\")) return new Fraction(parseFloat(a));\n                else {\n                    this.numerator = parseInt(a);\n                    this.denominator = 1;\n                }\n            } else return undefined; // could not parse\n        }\n    }\n    this.normalize();\n};\nFraction.prototype.clone = function() {\n    return new Fraction(this.numerator, this.denominator);\n};\n/* pretty-printer, converts fractions into whole numbers and fractions */ Fraction.prototype.toString = function() {\n    if (this.denominator === \"NaN\") return \"NaN\";\n    var wholepart = this.numerator / this.denominator > 0 ? Math.floor(this.numerator / this.denominator) : Math.ceil(this.numerator / this.denominator);\n    var numerator = this.numerator % this.denominator;\n    var denominator = this.denominator;\n    var result = [];\n    if (wholepart != 0) result.push(wholepart);\n    if (numerator != 0) result.push((wholepart === 0 ? numerator : Math.abs(numerator)) + \"/\" + denominator);\n    return result.length > 0 ? result.join(\" \") : 0;\n};\n/* destructively rescale the fraction by some integral factor */ Fraction.prototype.rescale = function(factor) {\n    this.numerator *= factor;\n    this.denominator *= factor;\n    return this;\n};\nFraction.prototype.add = function(b) {\n    var a = this.clone();\n    if (b instanceof Fraction) b = b.clone();\n    else b = new Fraction(b);\n    td = a.denominator;\n    a.rescale(b.denominator);\n    b.rescale(td);\n    a.numerator += b.numerator;\n    return a.normalize();\n};\nFraction.prototype.subtract = function(b) {\n    var a = this.clone();\n    if (b instanceof Fraction) b = b.clone(); // we scale our argument destructively, so clone\n    else b = new Fraction(b);\n    td = a.denominator;\n    a.rescale(b.denominator);\n    b.rescale(td);\n    a.numerator -= b.numerator;\n    return a.normalize();\n};\nFraction.prototype.multiply = function(b) {\n    var a = this.clone();\n    if (b instanceof Fraction) {\n        a.numerator *= b.numerator;\n        a.denominator *= b.denominator;\n    } else if (typeof b === \"number\") a.numerator *= b;\n    else return a.multiply(new Fraction(b));\n    return a.normalize();\n};\nFraction.prototype.divide = function(b) {\n    var a = this.clone();\n    if (b instanceof Fraction) {\n        a.numerator *= b.denominator;\n        a.denominator *= b.numerator;\n    } else if (typeof b === \"number\") a.denominator *= b;\n    else return a.divide(new Fraction(b));\n    return a.normalize();\n};\nFraction.prototype.equals = function(b) {\n    if (!(b instanceof Fraction)) b = new Fraction(b);\n    // fractions that are equal should have equal normalized forms\n    var a = this.clone().normalize();\n    var b = b.clone().normalize();\n    return a.numerator === b.numerator && a.denominator === b.denominator;\n};\n/* Utility functions */ /* Destructively normalize the fraction to its smallest representation. \n * e.g. 4/16 -> 1/4, 14/28 -> 1/2, etc.\n * This is called after all math ops.\n */ Fraction.prototype.normalize = function() {\n    var isFloat = function(n) {\n        return typeof n === \"number\" && (n > 0 && n % 1 > 0 && n % 1 < 1 || n < 0 && n % -1 < 0 && n % -1 > -1);\n    };\n    var roundToPlaces = function(n, places) {\n        if (!places) return Math.round(n);\n        else {\n            var scalar = Math.pow(10, places);\n            return Math.round(n * scalar) / scalar;\n        }\n    };\n    return function() {\n        // XXX hackish.  Is there a better way to address this issue?\n        //\n        /* first check if we have decimals, and if we do eliminate them\n         * multiply by the 10 ^ number of decimal places in the number\n         * round the number to nine decimal places\n         * to avoid js floating point funnies\n         */ if (isFloat(this.denominator)) {\n            var rounded = roundToPlaces(this.denominator, 9);\n            var scaleup = Math.pow(10, rounded.toString().split(\".\")[1].length);\n            this.denominator = Math.round(this.denominator * scaleup); // this !!! should be a whole number\n            //this.numerator *= scaleup;\n            this.numerator *= scaleup;\n        }\n        if (isFloat(this.numerator)) {\n            var rounded = roundToPlaces(this.numerator, 9);\n            var scaleup = Math.pow(10, rounded.toString().split(\".\")[1].length);\n            this.numerator = Math.round(this.numerator * scaleup); // this !!! should be a whole number\n            //this.numerator *= scaleup;\n            this.denominator *= scaleup;\n        }\n        var gcf = Fraction.gcf(this.numerator, this.denominator);\n        this.numerator /= gcf;\n        this.denominator /= gcf;\n        if (this.numerator < 0 && this.denominator < 0 || this.numerator > 0 && this.denominator < 0) {\n            this.numerator *= -1;\n            this.denominator *= -1;\n        }\n        return this;\n    };\n}();\n/* Takes two numbers and returns their greatest common factor.\n */ Fraction.gcf = function(a, b) {\n    var common_factors = [];\n    var fa = Fraction.primeFactors(a);\n    var fb = Fraction.primeFactors(b);\n    // for each factor in fa\n    // if it's also in fb\n    // put it into the common factors\n    fa.forEach(function(factor) {\n        var i = fb.indexOf(factor);\n        if (i >= 0) {\n            common_factors.push(factor);\n            fb.splice(i, 1); // remove from fb\n        }\n    });\n    if (common_factors.length === 0) return 1;\n    var gcf = function() {\n        var r = common_factors[0];\n        var i;\n        for(i = 1; i < common_factors.length; i++)r = r * common_factors[i];\n        return r;\n    }();\n    return gcf;\n};\n// Adapted from: \n// http://www.btinternet.com/~se16/js/factor.htm\nFraction.primeFactors = function(n) {\n    var num1 = Math.abs(n);\n    var factors = [];\n    var _factor = 2; // first potential prime factor\n    while(_factor * _factor <= num1)if (num1 % _factor === 0) {\n        factors.push(_factor); // so keep it\n        num1 = num1 / _factor; // and divide our search point by it\n    } else _factor++; // and increment\n    if (num1 != 1) factors.push(num1); //    so it too should be recorded\n    return factors; // Return the prime factors\n};\n$d6b4c6d58e0c0c19$export$b336c2702c498be5 = Fraction;\n\n\nconst $f50bd1f2915ed0f2$var$recipeContainer = document.querySelector(\".recipe\");\nlet $f50bd1f2915ed0f2$var$list = document.querySelector(\".recipe__ingredient-list\");\nlet $f50bd1f2915ed0f2$var$search = document.querySelector(\".search__btn\");\nlet $f50bd1f2915ed0f2$var$searchResults = document.querySelector(\".search-results\");\nlet $f50bd1f2915ed0f2$var$ul = document.querySelector(\".results\");\nlet $f50bd1f2915ed0f2$var$searchfield = document.querySelector(\".search__field\");\nlet $f50bd1f2915ed0f2$var$paging = document.querySelector(\".pagination\");\nconst $f50bd1f2915ed0f2$var$timeout = function(s) {\n    return new Promise(function(_, reject) {\n        setTimeout(function() {\n            reject(new Error(`Request took too long! Timeout after ${s} second`));\n        }, s * 1000);\n    });\n};\n// https://forkify-api.herokuapp.com/v2\n///////////////////////////////////////\nlet $f50bd1f2915ed0f2$var$errorFetch = function(e) {\n    let x = `<div class=\"error\">\n            <div>\n              <svg>\n                <use href=\"${(0, (/*@__PURE__*/$parcel$interopDefault($cb59c201e168fdfe$exports)))}#icon-alert-triangle\"></use>\n              </svg>\n            </div>\n            <p>${e}. Please try again!</p>\n          </div> `;\n    $f50bd1f2915ed0f2$var$recipeContainer.innerHTML = \"\";\n    $f50bd1f2915ed0f2$var$ul.innerHTML = \"\";\n    $f50bd1f2915ed0f2$var$recipeContainer.insertAdjacentHTML(\"afterbegin\", x);\n};\nlet $f50bd1f2915ed0f2$var$spinning = function(el) {\n    let x = `<div class=\"spinner\">\n          <svg>\n            <use href=\"${(0, (/*@__PURE__*/$parcel$interopDefault($cb59c201e168fdfe$exports)))}#icon-loader\"></use>\n          </svg>\n        </div>`;\n    el.insertAdjacentHTML(\"afterbegin\", x);\n};\nlet $f50bd1f2915ed0f2$var$loadingRecipe = function(obj) {\n    $f50bd1f2915ed0f2$var$recipeContainer.innerHTML = \"\";\n    let html = `<figure class=\"recipe__fig\">\n                    <img src=\"${obj.image_url}\" alt=\"Tomato\" class=\"recipe__img\" />\n                    <h1 class=\"recipe__title\">\n                      <span>${obj.title}</span>\n                    </h1>\n                  </figure>\n\n                  <div class=\"recipe__details\">\n                    <div class=\"recipe__info\">\n                      <svg class=\"recipe__info-icon\">\n                        <use href=\"${(0, (/*@__PURE__*/$parcel$interopDefault($cb59c201e168fdfe$exports)))}#icon-clock\"></use>\n                      </svg>\n                      <span class=\"recipe__info-data recipe__info-data--minutes\">45</span>\n                      <span class=\"recipe__info-text\">minutes</span>\n                    </div>\n                    <div class=\"recipe__info\">\n                      <svg class=\"recipe__info-icon\">\n                        <use href=\"${(0, (/*@__PURE__*/$parcel$interopDefault($cb59c201e168fdfe$exports)))}#icon-users\"></use>\n                      </svg>\n                      <span class=\"recipe__info-data recipe__info-data--people messi\">4</span>\n                      <span class=\"recipe__info-text\">servings</span>\n\n                      \n                    </div>\n\n                    \n                  </div>\n                  \n\n                  \n                  <div class=\"recipe__ingredients\">\n                    <h2 class=\"heading--2\">Recipe ingredients</h2>\n                    <ul class=\"recipe__ingredient-list\">\n                      \n                      ${obj.ingredients.map(function(val) {\n        return `<li class=\"recipe__ingredient\">\n                              <svg class=\"recipe__icon\">\n                                <use href=\"${0, (/*@__PURE__*/$parcel$interopDefault($cb59c201e168fdfe$exports))}#icon-check\"></use>\n                              </svg>\n                              <div class=\"recipe__quantity\">${val.quantity ? new Fraction(val.quantity).toString() : \"\"}</div>\n                              <div class=\"recipe__description\">\n                                <span class=\"recipe__unit\">${val.unit}</span>\n                                ${val.description}\n                              </div>\n                            </li>`;\n    }).join(\"\")}\n                    </ul>\n                  </div>\n\n                  <div class=\"recipe__directions\">\n                    <h2 class=\"heading--2\">How to cook it</h2>\n                    <p class=\"recipe__directions-text\">\n                      This recipe was carefully designed and tested by\n                      <span class=\"recipe__publisher\">The Pioneer Woman</span>. Please check out\n                      directions at their website.\n                    </p>\n                    <a\n                      class=\"btn--small recipe__btn\"\n                      href=\"http://thepioneerwoman.com/cooking/pasta-with-tomato-cream-sauce/\"\n                      target=\"_blank\"\n                    >\n                      <span>Directions</span>\n                      <svg class=\"search__icon\">\n                        <use href=\"${(0, (/*@__PURE__*/$parcel$interopDefault($cb59c201e168fdfe$exports)))}#icon-arrow-right\"></use>\n                      </svg>\n                    </a>\n                  </div>`;\n    $f50bd1f2915ed0f2$var$recipeContainer.insertAdjacentHTML(\"afterbegin\", html);\n};\nlet $f50bd1f2915ed0f2$var$saran = async function(val) {\n    try {\n        $f50bd1f2915ed0f2$var$spinning($f50bd1f2915ed0f2$var$ul);\n        let x = await fetch(`https://forkify-api.herokuapp.com/api/v2/recipes?search=${val}`);\n        let y = await x.json();\n        console.log(y);\n        if (y.status === \"success\" && y.data.recipes.length != 0) {\n            $f50bd1f2915ed0f2$var$ul.innerHTML = \"\";\n            let arr = y.data.recipes;\n            return arr;\n        } else throw new Error(\"this recipe is not present in our database.\");\n    } catch (e) {\n        throw e;\n    }\n};\nlet $f50bd1f2915ed0f2$var$next;\nlet $f50bd1f2915ed0f2$var$previous;\nlet $f50bd1f2915ed0f2$var$c;\nwindow.addEventListener(\"load\", function(e) {\n    e.preventDefault();\n    //loading container recipes\n    $f50bd1f2915ed0f2$var$search.addEventListener(\"click\", function(e1) {\n        e1.preventDefault();\n        document.querySelector(\".search-results\").style.paddingTop = 0;\n        let inputs = $f50bd1f2915ed0f2$var$searchfield.value;\n        $f50bd1f2915ed0f2$var$saran(inputs).then(function(val) {\n            console.log(val);\n            let a = [];\n            let b = [];\n            val.forEach(function(value, i) {\n                let x = `<li class=\"preview\">\n                    <a class=\"preview__link preview__link--active\" href=\"#${value.id}\">\n                      <figure class=\"preview__fig\">\n                        <img src=\"${value.image_url}\" alt=\"Test\" />\n                      </figure>\n                      <div class=\"preview__data\">\n                        <h4 class=\"preview__title\">${value.title}</h4>\n                        <p class=\"preview__publisher\">The Pioneer Woman</p>\n                        <div class=\"preview__user-generated\">\n                          <svg>\n                            <use href=\"${(0, (/*@__PURE__*/$parcel$interopDefault($cb59c201e168fdfe$exports)))}#icon-user\"></use>\n                          </svg>\n                        </div>\n                      </div>\n                    </a>\n                  </li>`;\n                b.push(x);\n                if ((i + 1) % 10 === 0) {\n                    a.push(b.join(\"\"));\n                    b = [];\n                }\n                $f50bd1f2915ed0f2$var$ul.insertAdjacentHTML(\"afterbegin\", x);\n            });\n            a.push(b.join(\"\"));\n            console.log(a);\n            if (a.length === 1) $f50bd1f2915ed0f2$var$ul.insertAdjacentHTML(\"afterbegin\", a[0]);\n            else {\n                a.forEach(function(value, i) {\n                    if (i === 0) {\n                        $f50bd1f2915ed0f2$var$ul.innerHTML = \"\";\n                        $f50bd1f2915ed0f2$var$ul.insertAdjacentHTML(\"afterbegin\", value);\n                        let temp = `\n                                    <button class=\"btn--inline pagination__btn--next\">\n                                      <span id=\"${i + 2}\">Page ${i + 2}</span>\n                                      <svg class=\"search__icon\">\n                                        <use href=\"${(0, (/*@__PURE__*/$parcel$interopDefault($cb59c201e168fdfe$exports)))}#icon-arrow-right\"></use>\n                                      </svg>\n                                    </button>`;\n                        $f50bd1f2915ed0f2$var$paging.insertAdjacentHTML(\"afterbegin\", temp);\n                    }\n                });\n                $f50bd1f2915ed0f2$var$paging.addEventListener(\"click\", function(e) {\n                    e.preventDefault();\n                    if (e.target.hasAttribute(\"id\")) {\n                        let x = Number(e.target.getAttribute(\"id\"));\n                        console.log(x);\n                        if (x - 2 + 1 + 1 != a.length) {\n                            let temp = `<button class=\"btn--inline pagination__btn--prev\">\n                                        \n                                        <svg class=\"search__icon\">\n                                          <use href=\"${(0, (/*@__PURE__*/$parcel$interopDefault($cb59c201e168fdfe$exports)))}#icon-arrow-left\"></use>\n                                        </svg>\n                                        <span id1=\"${x - 1}\">Page ${x - 1}</span>\n                                      </button>\n                                      <button class=\"btn--inline pagination__btn--next\">\n                                        <span id=\"${x + 1}\">Page ${x + 1}</span>\n                                        <svg class=\"search__icon\">\n                                          <use href=\"${(0, (/*@__PURE__*/$parcel$interopDefault($cb59c201e168fdfe$exports)))}#icon-arrow-right\"></use>\n                                        </svg>\n                                      </button>`;\n                            $f50bd1f2915ed0f2$var$ul.innerHTML = \"\";\n                            let provide = a[x - 2 + 1];\n                            console.log(provide);\n                            $f50bd1f2915ed0f2$var$ul.insertAdjacentHTML(\"afterbegin\", provide);\n                            $f50bd1f2915ed0f2$var$paging.innerHTML = \"\";\n                            $f50bd1f2915ed0f2$var$paging.insertAdjacentHTML(\"afterbegin\", temp);\n                        } else if (x - 2 + 2 === a.length) {\n                            let temp = `<button class=\"btn--inline pagination__btn--prev\">\n                                \n                                <svg class=\"search__icon\">\n                                  <use href=\"${(0, (/*@__PURE__*/$parcel$interopDefault($cb59c201e168fdfe$exports)))}#icon-arrow-left\"></use>\n                                </svg>\n                                <span id1=\"${x - 1}\">Page ${x - 1}</span>\n                              </button>`;\n                            $f50bd1f2915ed0f2$var$ul.innerHTML = \"\";\n                            let provide = a[x - 1];\n                            console.log(provide);\n                            $f50bd1f2915ed0f2$var$ul.insertAdjacentHTML(\"afterbegin\", provide);\n                            $f50bd1f2915ed0f2$var$paging.innerHTML = \"\";\n                            $f50bd1f2915ed0f2$var$paging.insertAdjacentHTML(\"afterbegin\", temp);\n                        }\n                    }\n                });\n                $f50bd1f2915ed0f2$var$paging.addEventListener(\"click\", function(e) {\n                    e.preventDefault();\n                    if (e.target.hasAttribute(\"id1\")) {\n                        let x = Number(e.target.getAttribute(\"id1\"));\n                        console.log(x);\n                        if (x - 2 + 1 + 1 > 1) {\n                            let temp = `<button class=\"btn--inline pagination__btn--prev\">\n                                        \n                                        <svg class=\"search__icon\">\n                                          <use href=\"${(0, (/*@__PURE__*/$parcel$interopDefault($cb59c201e168fdfe$exports)))}#icon-arrow-left\"></use>\n                                        </svg>\n                                        <span id1=\"${x - 1}\">Page ${x - 1}</span>\n                                      </button>\n                                      <button class=\"btn--inline pagination__btn--next\">\n                                        <span id=\"${x + 1}\">Page ${x + 1}</span>\n                                        <svg class=\"search__icon\">\n                                          <use href=\"${(0, (/*@__PURE__*/$parcel$interopDefault($cb59c201e168fdfe$exports)))}#icon-arrow-right\"></use>\n                                        </svg>\n                                      </button>`;\n                            $f50bd1f2915ed0f2$var$ul.innerHTML = \"\";\n                            let provide = a[x - 1];\n                            console.log(provide);\n                            $f50bd1f2915ed0f2$var$ul.insertAdjacentHTML(\"afterbegin\", provide);\n                            $f50bd1f2915ed0f2$var$paging.innerHTML = \"\";\n                            $f50bd1f2915ed0f2$var$paging.insertAdjacentHTML(\"afterbegin\", temp);\n                        } else if (x - 2 + 2 === 1) {\n                            let temp = `<button class=\"btn--inline pagination__btn--next\">\n                                \n                                <span id1=\"${x + 1}\">Page ${x + 1}</span>\n                                <svg class=\"search__icon\">\n                                  <use href=\"${(0, (/*@__PURE__*/$parcel$interopDefault($cb59c201e168fdfe$exports)))}#icon-arrow-right\"></use>\n                                </svg>\n                              </button>`;\n                            $f50bd1f2915ed0f2$var$ul.innerHTML = \"\";\n                            let provide = a[x - 1];\n                            console.log(provide);\n                            $f50bd1f2915ed0f2$var$ul.insertAdjacentHTML(\"afterbegin\", provide);\n                            $f50bd1f2915ed0f2$var$paging.innerHTML = \"\";\n                            $f50bd1f2915ed0f2$var$paging.insertAdjacentHTML(\"afterbegin\", temp);\n                        }\n                    }\n                });\n            }\n        }).catch(function(val) {\n            $f50bd1f2915ed0f2$var$errorFetch(val.message);\n        });\n    });\n});\nlet $f50bd1f2915ed0f2$var$fetcher = async function() {\n    try {\n        let hash = window.location.hash.slice(1);\n        console.log(hash);\n        $f50bd1f2915ed0f2$var$recipeContainer.innerHTML = \"\";\n        $f50bd1f2915ed0f2$var$spinning($f50bd1f2915ed0f2$var$recipeContainer);\n        let leo = `https://forkify-api.herokuapp.com/api/v2/recipes/${hash}`;\n        let req = await Promise.race([\n            fetch(leo),\n            $f50bd1f2915ed0f2$var$timeout(5)\n        ]);\n        console.log(req);\n        if (req.ok) {\n            let record = await req.json();\n            console.log(record);\n            let k = record.data.recipe;\n            console.log(k);\n            return k;\n        } else throw new Error(`${req.statusText}`);\n    } catch (e) {\n        throw e;\n    }\n};\n// Remove existing event listeners\nlet $f50bd1f2915ed0f2$var$currentRecipe = null;\n// ... (Previous code)\nlet $f50bd1f2915ed0f2$var$recipeClickHandler = function(e, val) {\n    if (e.target.classList.contains(\"suzuki\") || e.target.classList.contains(\"inc\")) {\n        if (val) {\n            let qu = Number(document.querySelector(\".messi\").textContent);\n            qu = qu + 1;\n            document.querySelector(\".messi\").textContent = `${qu}`;\n            console.log(qu);\n            let updatedIngredients = val.ingredients.map(function(ingredient) {\n                if (ingredient.quantity) return {\n                    ...ingredient,\n                    quantity: qu * ingredient.quantity / val.servings\n                };\n                return ingredient;\n            });\n            val.ingredients = updatedIngredients;\n            val.servings = qu;\n            $f50bd1f2915ed0f2$var$recipeContainer.innerHTML = \"\";\n            $f50bd1f2915ed0f2$var$loadingRecipe(val);\n        }\n    }\n    // Stop event propagation to prevent further triggering of outer elements' listeners\n    e.stopPropagation();\n};\n// ... (Rest of the code)\nwindow.addEventListener(\"hashchange\", function(e) {\n    e.preventDefault();\n    $f50bd1f2915ed0f2$var$fetcher().then(function(val) {\n        console.log(val.ingredients);\n        $f50bd1f2915ed0f2$var$loadingRecipe(val);\n        // Remove existing event listeners\n        $f50bd1f2915ed0f2$var$recipeContainer.removeEventListener(\"click\", $f50bd1f2915ed0f2$var$recipeClickHandler);\n        // Attach the event listener using event delegation\n        $f50bd1f2915ed0f2$var$recipeContainer.addEventListener(\"click\", function(e) {\n            $f50bd1f2915ed0f2$var$recipeClickHandler(e, val);\n        });\n    // ... (rest of the code)\n    }).catch(function(val) {\n        $f50bd1f2915ed0f2$var$errorFetch(val.message);\n    });\n});\n\n\n//# sourceMappingURL=index.e88a32c8.js.map\n","\"use strict\";\n\nvar mapping = {};\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\nfunction resolve(id) {\n  var resolved = mapping[id];\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n  return resolved;\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"f9fpV\\\":\\\"index.e88a32c8.js\\\",\\\"hfd23\\\":\\\"icons.c14567a0.svg\\\"}\"));","import icons from '../img/icons.svg';\nimport { fraction } from 'fractional';\nconst recipeContainer = document.querySelector('.recipe');\nlet list = document.querySelector('.recipe__ingredient-list');\nlet search = document.querySelector('.search__btn');\nlet searchResults = document.querySelector('.search-results');\nlet ul = document.querySelector('.results');\nlet searchfield = document.querySelector('.search__field');\n\nlet paging = document.querySelector('.pagination');\n\nconst timeout = function (s) {\n  return new Promise(function (_, reject) {\n    setTimeout(function () {\n      reject(new Error(`Request took too long! Timeout after ${s} second`));\n    }, s * 1000);\n  });\n};\n\n// https://forkify-api.herokuapp.com/v2\n\n///////////////////////////////////////\nlet errorFetch = function (e) {\n  let x = `<div class=\"error\">\n            <div>\n              <svg>\n                <use href=\"${icons}#icon-alert-triangle\"></use>\n              </svg>\n            </div>\n            <p>${e}. Please try again!</p>\n          </div> `;\n  recipeContainer.innerHTML = '';\n  ul.innerHTML = '';\n  recipeContainer.insertAdjacentHTML('afterbegin', x);\n};\nlet spinning = function (el) {\n  let x = `<div class=\"spinner\">\n          <svg>\n            <use href=\"${icons}#icon-loader\"></use>\n          </svg>\n        </div>`;\n  el.insertAdjacentHTML('afterbegin', x);\n};\nlet loadingRecipe = function (obj) {\n  recipeContainer.innerHTML = '';\n  let html = `<figure class=\"recipe__fig\">\n                    <img src=\"${\n                      obj.image_url\n                    }\" alt=\"Tomato\" class=\"recipe__img\" />\n                    <h1 class=\"recipe__title\">\n                      <span>${obj.title}</span>\n                    </h1>\n                  </figure>\n\n                  <div class=\"recipe__details\">\n                    <div class=\"recipe__info\">\n                      <svg class=\"recipe__info-icon\">\n                        <use href=\"${icons}#icon-clock\"></use>\n                      </svg>\n                      <span class=\"recipe__info-data recipe__info-data--minutes\">45</span>\n                      <span class=\"recipe__info-text\">minutes</span>\n                    </div>\n                    <div class=\"recipe__info\">\n                      <svg class=\"recipe__info-icon\">\n                        <use href=\"${icons}#icon-users\"></use>\n                      </svg>\n                      <span class=\"recipe__info-data recipe__info-data--people messi\">4</span>\n                      <span class=\"recipe__info-text\">servings</span>\n\n                      \n                    </div>\n\n                    \n                  </div>\n                  \n\n                  \n                  <div class=\"recipe__ingredients\">\n                    <h2 class=\"heading--2\">Recipe ingredients</h2>\n                    <ul class=\"recipe__ingredient-list\">\n                      \n                      ${obj.ingredients\n                        .map(function (val) {\n                          return `<li class=\"recipe__ingredient\">\n                              <svg class=\"recipe__icon\">\n                                <use href=\"${icons}#icon-check\"></use>\n                              </svg>\n                              <div class=\"recipe__quantity\">${\n                                val.quantity\n                                  ? new Fraction(val.quantity).toString()\n                                  : ''\n                              }</div>\n                              <div class=\"recipe__description\">\n                                <span class=\"recipe__unit\">${val.unit}</span>\n                                ${val.description}\n                              </div>\n                            </li>`;\n                        })\n                        .join('')}\n                    </ul>\n                  </div>\n\n                  <div class=\"recipe__directions\">\n                    <h2 class=\"heading--2\">How to cook it</h2>\n                    <p class=\"recipe__directions-text\">\n                      This recipe was carefully designed and tested by\n                      <span class=\"recipe__publisher\">The Pioneer Woman</span>. Please check out\n                      directions at their website.\n                    </p>\n                    <a\n                      class=\"btn--small recipe__btn\"\n                      href=\"http://thepioneerwoman.com/cooking/pasta-with-tomato-cream-sauce/\"\n                      target=\"_blank\"\n                    >\n                      <span>Directions</span>\n                      <svg class=\"search__icon\">\n                        <use href=\"${icons}#icon-arrow-right\"></use>\n                      </svg>\n                    </a>\n                  </div>`;\n\n  recipeContainer.insertAdjacentHTML('afterbegin', html);\n};\nlet saran = async function (val) {\n  try {\n    spinning(ul);\n    let x = await fetch(\n      `https://forkify-api.herokuapp.com/api/v2/recipes?search=${val}`\n    );\n    let y = await x.json();\n    console.log(y);\n    if (y.status === 'success' && y.data.recipes.length != 0) {\n      ul.innerHTML = '';\n      let arr = y.data.recipes;\n      return arr;\n    } else {\n      throw new Error('this recipe is not present in our database.');\n    }\n  } catch (e) {\n    throw e;\n  }\n};\nlet next;\nlet previous;\nlet c;\nwindow.addEventListener('load', function (e) {\n  e.preventDefault();\n  //loading container recipes\n\n  search.addEventListener('click', function (e1) {\n    e1.preventDefault();\n    document.querySelector('.search-results').style.paddingTop = 0;\n    let inputs = searchfield.value;\n    saran(inputs)\n      .then(function (val) {\n        console.log(val);\n        let a = [];\n        let b = [];\n        val.forEach(function (value, i) {\n          let x = `<li class=\"preview\">\n                    <a class=\"preview__link preview__link--active\" href=\"#${value.id}\">\n                      <figure class=\"preview__fig\">\n                        <img src=\"${value.image_url}\" alt=\"Test\" />\n                      </figure>\n                      <div class=\"preview__data\">\n                        <h4 class=\"preview__title\">${value.title}</h4>\n                        <p class=\"preview__publisher\">The Pioneer Woman</p>\n                        <div class=\"preview__user-generated\">\n                          <svg>\n                            <use href=\"${icons}#icon-user\"></use>\n                          </svg>\n                        </div>\n                      </div>\n                    </a>\n                  </li>`;\n          b.push(x);\n          if ((i + 1) % 10 === 0) {\n            a.push(b.join(''));\n            b = [];\n          }\n          ul.insertAdjacentHTML('afterbegin', x);\n        });\n        a.push(b.join(''));\n        console.log(a);\n        if (a.length === 1) {\n          ul.insertAdjacentHTML('afterbegin', a[0]);\n        } else {\n          a.forEach(function (value, i) {\n            if (i === 0) {\n              ul.innerHTML = '';\n              ul.insertAdjacentHTML('afterbegin', value);\n              let temp = `\n                                    <button class=\"btn--inline pagination__btn--next\">\n                                      <span id=\"${i + 2}\">Page ${i + 2}</span>\n                                      <svg class=\"search__icon\">\n                                        <use href=\"${icons}#icon-arrow-right\"></use>\n                                      </svg>\n                                    </button>`;\n              paging.insertAdjacentHTML('afterbegin', temp);\n            }\n          });\n\n          paging.addEventListener('click', function (e) {\n            e.preventDefault();\n\n            if (e.target.hasAttribute('id')) {\n              let x = Number(e.target.getAttribute('id'));\n              console.log(x);\n              if (x - 2 + 1 + 1 != a.length) {\n                let temp = `<button class=\"btn--inline pagination__btn--prev\">\n                                        \n                                        <svg class=\"search__icon\">\n                                          <use href=\"${icons}#icon-arrow-left\"></use>\n                                        </svg>\n                                        <span id1=\"${x - 1}\">Page ${\n                  x - 1\n                }</span>\n                                      </button>\n                                      <button class=\"btn--inline pagination__btn--next\">\n                                        <span id=\"${x + 1}\">Page ${x + 1}</span>\n                                        <svg class=\"search__icon\">\n                                          <use href=\"${icons}#icon-arrow-right\"></use>\n                                        </svg>\n                                      </button>`;\n\n                ul.innerHTML = '';\n                let provide = a[x - 2 + 1];\n                console.log(provide);\n                ul.insertAdjacentHTML('afterbegin', provide);\n                paging.innerHTML = '';\n                paging.insertAdjacentHTML('afterbegin', temp);\n              } else if (x - 2 + 2 === a.length) {\n                let temp = `<button class=\"btn--inline pagination__btn--prev\">\n                                \n                                <svg class=\"search__icon\">\n                                  <use href=\"${icons}#icon-arrow-left\"></use>\n                                </svg>\n                                <span id1=\"${x - 1}\">Page ${x - 1}</span>\n                              </button>`;\n                ul.innerHTML = '';\n                let provide = a[x - 1];\n                console.log(provide);\n                ul.insertAdjacentHTML('afterbegin', provide);\n                paging.innerHTML = '';\n                paging.insertAdjacentHTML('afterbegin', temp);\n              }\n            }\n          });\n\n          paging.addEventListener('click', function (e) {\n            e.preventDefault();\n\n            if (e.target.hasAttribute('id1')) {\n              let x = Number(e.target.getAttribute('id1'));\n              console.log(x);\n              if (x - 2 + 1 + 1 > 1) {\n                let temp = `<button class=\"btn--inline pagination__btn--prev\">\n                                        \n                                        <svg class=\"search__icon\">\n                                          <use href=\"${icons}#icon-arrow-left\"></use>\n                                        </svg>\n                                        <span id1=\"${x - 1}\">Page ${\n                  x - 1\n                }</span>\n                                      </button>\n                                      <button class=\"btn--inline pagination__btn--next\">\n                                        <span id=\"${x + 1}\">Page ${x + 1}</span>\n                                        <svg class=\"search__icon\">\n                                          <use href=\"${icons}#icon-arrow-right\"></use>\n                                        </svg>\n                                      </button>`;\n\n                ul.innerHTML = '';\n                let provide = a[x - 1];\n                console.log(provide);\n                ul.insertAdjacentHTML('afterbegin', provide);\n                paging.innerHTML = '';\n                paging.insertAdjacentHTML('afterbegin', temp);\n              } else if (x - 2 + 2 === 1) {\n                let temp = `<button class=\"btn--inline pagination__btn--next\">\n                                \n                                <span id1=\"${x + 1}\">Page ${x + 1}</span>\n                                <svg class=\"search__icon\">\n                                  <use href=\"${icons}#icon-arrow-right\"></use>\n                                </svg>\n                              </button>`;\n                ul.innerHTML = '';\n                let provide = a[x - 1];\n                console.log(provide);\n                ul.insertAdjacentHTML('afterbegin', provide);\n                paging.innerHTML = '';\n                paging.insertAdjacentHTML('afterbegin', temp);\n              }\n            }\n          });\n        }\n      })\n      .catch(function (val) {\n        errorFetch(val.message);\n      });\n  });\n});\n\nlet fetcher = async function () {\n  try {\n    let hash = window.location.hash.slice(1);\n    console.log(hash);\n    recipeContainer.innerHTML = '';\n    spinning(recipeContainer);\n    let leo = `https://forkify-api.herokuapp.com/api/v2/recipes/${hash}`;\n    let req = await Promise.race([fetch(leo), timeout(5)]);\n    console.log(req);\n    if (req.ok) {\n      let record = await req.json();\n      console.log(record);\n      let k = record.data.recipe;\n      console.log(k);\n      return k;\n    } else {\n      throw new Error(`${req.statusText}`);\n    }\n  } catch (e) {\n    throw e;\n  }\n};\n\n// Remove existing event listeners\nlet currentRecipe = null;\n// ... (Previous code)\n\nlet recipeClickHandler = function (e, val) {\n  if (\n    e.target.classList.contains('suzuki') ||\n    e.target.classList.contains('inc')\n  ) {\n    if (val) {\n      let qu = Number(document.querySelector('.messi').textContent);\n      qu = qu + 1;\n      document.querySelector('.messi').textContent = `${qu}`;\n      console.log(qu);\n\n      let updatedIngredients = val.ingredients.map(function (ingredient) {\n        if (ingredient.quantity) {\n          return {\n            ...ingredient,\n            quantity: (qu * ingredient.quantity) / val.servings,\n          };\n        }\n        return ingredient;\n      });\n\n      val.ingredients = updatedIngredients;\n      val.servings = qu;\n\n      recipeContainer.innerHTML = '';\n      loadingRecipe(val);\n    }\n  }\n\n  // Stop event propagation to prevent further triggering of outer elements' listeners\n  e.stopPropagation();\n};\n\n// ... (Rest of the code)\n\nwindow.addEventListener('hashchange', function (e) {\n  e.preventDefault();\n  fetcher()\n    .then(function (val) {\n      console.log(val.ingredients);\n      loadingRecipe(val);\n\n      // Remove existing event listeners\n      recipeContainer.removeEventListener('click', recipeClickHandler);\n\n      // Attach the event listener using event delegation\n      recipeContainer.addEventListener('click', function (e) {\n        recipeClickHandler(e, val);\n      });\n\n      // ... (rest of the code)\n    })\n    .catch(function (val) {\n      errorFetch(val.message);\n    });\n});\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"hfd23\")).toString();","/*\nfraction.js\nA Javascript fraction library.\n\nCopyright (c) 2009  Erik Garrison <erik@hypervolu.me>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n*/\n\n\n/* Fractions */\n/* \n *\n * Fraction objects are comprised of a numerator and a denomenator.  These\n * values can be accessed at fraction.numerator and fraction.denomenator.\n *\n * Fractions are always returned and stored in lowest-form normalized format.\n * This is accomplished via Fraction.normalize.\n *\n * The following mathematical operations on fractions are supported:\n *\n * Fraction.equals\n * Fraction.add\n * Fraction.subtract\n * Fraction.multiply\n * Fraction.divide\n *\n * These operations accept both numbers and fraction objects.  (Best results\n * are guaranteed when the input is a fraction object.)  They all return a new\n * Fraction object.\n *\n * Usage:\n *\n * TODO\n *\n */\n\n/*\n * The Fraction constructor takes one of:\n *   an explicit numerator (integer) and denominator (integer),\n *   a string representation of the fraction (string),\n *   or a floating-point number (float)\n *\n * These initialization methods are provided for convenience.  Because of\n * rounding issues the best results will be given when the fraction is\n * constructed from an explicit integer numerator and denomenator, and not a\n * decimal number.\n *\n *\n * e.g. new Fraction(1, 2) --> 1/2\n *      new Fraction('1/2') --> 1/2\n *      new Fraction('2 3/4') --> 11/4  (prints as 2 3/4)\n *\n */\nFraction = function(numerator, denominator)\n{\n    /* double argument invocation */\n    if (typeof numerator !== 'undefined' && denominator) {\n        if (typeof(numerator) === 'number' && typeof(denominator) === 'number') {\n            this.numerator = numerator;\n            this.denominator = denominator;\n        } else if (typeof(numerator) === 'string' && typeof(denominator) === 'string') {\n            // what are they?\n            // hmm....\n            // assume they are ints?\n            this.numerator = parseInt(numerator);\n            this.denominator = parseInt(denominator);\n        }\n    /* single-argument invocation */\n    } else if (typeof denominator === 'undefined') {\n        num = numerator; // swap variable names for legibility\n        if (typeof(num) === 'number') {  // just a straight number init\n            this.numerator = num;\n            this.denominator = 1;\n        } else if (typeof(num) === 'string') {\n            var a, b;  // hold the first and second part of the fraction, e.g. a = '1' and b = '2/3' in 1 2/3\n                       // or a = '2/3' and b = undefined if we are just passed a single-part number\n            var arr = num.split(' ')\n            if (arr[0]) a = arr[0]\n            if (arr[1]) b = arr[1]\n            /* compound fraction e.g. 'A B/C' */\n            //  if a is an integer ...\n            if (a % 1 === 0 && b && b.match('/')) {\n                return (new Fraction(a)).add(new Fraction(b));\n            } else if (a && !b) {\n                /* simple fraction e.g. 'A/B' */\n                if (typeof(a) === 'string' && a.match('/')) {\n                    // it's not a whole number... it's actually a fraction without a whole part written\n                    var f = a.split('/');\n                    this.numerator = f[0]; this.denominator = f[1];\n                /* string floating point */\n                } else if (typeof(a) === 'string' && a.match('\\.')) {\n                    return new Fraction(parseFloat(a));\n                /* whole number e.g. 'A' */\n                } else { // just passed a whole number as a string\n                    this.numerator = parseInt(a);\n                    this.denominator = 1;\n                }\n            } else {\n                return undefined; // could not parse\n            }\n        }\n    }\n    this.normalize();\n}\n\n\nFraction.prototype.clone = function()\n{\n    return new Fraction(this.numerator, this.denominator);\n}\n\n\n/* pretty-printer, converts fractions into whole numbers and fractions */\nFraction.prototype.toString = function()\n{\n    if (this.denominator==='NaN') return 'NaN'\n    var wholepart = (this.numerator/this.denominator>0) ?\n      Math.floor(this.numerator / this.denominator) :\n      Math.ceil(this.numerator / this.denominator)\n    var numerator = this.numerator % this.denominator \n    var denominator = this.denominator;\n    var result = []; \n    if (wholepart != 0)  \n        result.push(wholepart);\n    if (numerator != 0)  \n        result.push(((wholepart===0) ? numerator : Math.abs(numerator)) + '/' + denominator);\n    return result.length > 0 ? result.join(' ') : 0;\n}\n\n\n/* destructively rescale the fraction by some integral factor */\nFraction.prototype.rescale = function(factor)\n{\n    this.numerator *= factor;\n    this.denominator *= factor;\n    return this;\n}\n\n\nFraction.prototype.add = function(b)\n{\n    var a = this.clone();\n    if (b instanceof Fraction) {\n        b = b.clone();\n    } else {\n        b = new Fraction(b);\n    }\n    td = a.denominator;\n    a.rescale(b.denominator);\n    b.rescale(td);\n\n    a.numerator += b.numerator;\n\n    return a.normalize();\n}\n\n\nFraction.prototype.subtract = function(b)\n{\n    var a = this.clone();\n    if (b instanceof Fraction) {\n        b = b.clone();  // we scale our argument destructively, so clone\n    } else {\n        b = new Fraction(b);\n    }\n    td = a.denominator;\n    a.rescale(b.denominator);\n    b.rescale(td);\n\n    a.numerator -= b.numerator;\n\n    return a.normalize();\n}\n\n\nFraction.prototype.multiply = function(b)\n{\n    var a = this.clone();\n    if (b instanceof Fraction)\n    {\n        a.numerator *= b.numerator;\n        a.denominator *= b.denominator;\n    } else if (typeof b === 'number') {\n        a.numerator *= b;\n    } else {\n        return a.multiply(new Fraction(b));\n    }\n    return a.normalize();\n}\n\nFraction.prototype.divide = function(b)\n{\n    var a = this.clone();\n    if (b instanceof Fraction)\n    {\n        a.numerator *= b.denominator;\n        a.denominator *= b.numerator;\n    } else if (typeof b === 'number') {\n        a.denominator *= b;\n    } else {\n        return a.divide(new Fraction(b));\n    }\n    return a.normalize();\n}\n\nFraction.prototype.equals = function(b)\n{\n    if (!(b instanceof Fraction)) {\n        b = new Fraction(b);\n    }\n    // fractions that are equal should have equal normalized forms\n    var a = this.clone().normalize();\n    var b = b.clone().normalize();\n    return (a.numerator === b.numerator && a.denominator === b.denominator);\n}\n\n\n/* Utility functions */\n\n/* Destructively normalize the fraction to its smallest representation. \n * e.g. 4/16 -> 1/4, 14/28 -> 1/2, etc.\n * This is called after all math ops.\n */\nFraction.prototype.normalize = (function()\n{\n\n    var isFloat = function(n)\n    {\n        return (typeof(n) === 'number' && \n                ((n > 0 && n % 1 > 0 && n % 1 < 1) || \n                 (n < 0 && n % -1 < 0 && n % -1 > -1))\n               );\n    }\n\n    var roundToPlaces = function(n, places) \n    {\n        if (!places) {\n            return Math.round(n);\n        } else {\n            var scalar = Math.pow(10, places);\n            return Math.round(n*scalar)/scalar;\n        }\n    }\n        \n    return (function() {\n\n        // XXX hackish.  Is there a better way to address this issue?\n        //\n        /* first check if we have decimals, and if we do eliminate them\n         * multiply by the 10 ^ number of decimal places in the number\n         * round the number to nine decimal places\n         * to avoid js floating point funnies\n         */\n        if (isFloat(this.denominator)) {\n            var rounded = roundToPlaces(this.denominator, 9);\n            var scaleup = Math.pow(10, rounded.toString().split('.')[1].length);\n            this.denominator = Math.round(this.denominator * scaleup); // this !!! should be a whole number\n            //this.numerator *= scaleup;\n            this.numerator *= scaleup;\n        } \n        if (isFloat(this.numerator)) {\n            var rounded = roundToPlaces(this.numerator, 9);\n            var scaleup = Math.pow(10, rounded.toString().split('.')[1].length);\n            this.numerator = Math.round(this.numerator * scaleup); // this !!! should be a whole number\n            //this.numerator *= scaleup;\n            this.denominator *= scaleup;\n        }\n        var gcf = Fraction.gcf(this.numerator, this.denominator);\n        this.numerator /= gcf;\n        this.denominator /= gcf;\n        if ((this.numerator < 0 && this.denominator < 0) || (this.numerator > 0 && this.denominator < 0)) {\n            this.numerator *= -1;\n            this.denominator *= -1;\n        }\n        return this;\n    });\n\n})();\n\n\n/* Takes two numbers and returns their greatest common factor.\n */\nFraction.gcf = function(a, b)\n{\n\n    var common_factors = [];\n    var fa = Fraction.primeFactors(a);\n    var fb = Fraction.primeFactors(b);\n    // for each factor in fa\n    // if it's also in fb\n    // put it into the common factors\n    fa.forEach(function (factor) \n    { \n        var i = fb.indexOf(factor);\n        if (i >= 0) {\n            common_factors.push(factor);\n            fb.splice(i,1); // remove from fb\n        }\n    });\n\n    if (common_factors.length === 0)\n        return 1;\n\n    var gcf = (function() {\n        var r = common_factors[0];\n        var i;\n        for (i=1;i<common_factors.length;i++)\n        {\n            r = r * common_factors[i];\n        }\n        return r;\n    })();\n\n    return gcf;\n\n};\n\n\n// Adapted from: \n// http://www.btinternet.com/~se16/js/factor.htm\nFraction.primeFactors = function(n) \n{\n\n    var num = Math.abs(n);\n    var factors = [];\n    var _factor = 2;  // first potential prime factor\n\n    while (_factor * _factor <= num)  // should we keep looking for factors?\n    {      \n      if (num % _factor === 0)  // this is a factor\n        { \n            factors.push(_factor);  // so keep it\n            num = num/_factor;  // and divide our search point by it\n        }\n        else\n        {\n            _factor++;  // and increment\n        }\n    }\n\n    if (num != 1)                    // If there is anything left at the end...\n    {                                // ...this must be the last prime factor\n        factors.push(num);           //    so it too should be recorded\n    }\n\n    return factors;                  // Return the prime factors\n}\n\nmodule.exports.Fraction = Fraction\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$interopDefault","a","__esModule","default","isFloat","roundToPlaces","$parcel$global","globalThis","self","window","global","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","i","length","resolved","JSON","parse","$cb59c201e168fdfe$exports","URL","resolve","url","toString","Fraction","numerator","denominator","parseInt","num","b","arr","split","match","add","f","parseFloat","normalize","prototype","clone","wholepart","Math","floor","ceil","result","push","abs","join","rescale","factor","td","subtract","multiply","divide","equals","places","round","scalar","pow","rounded","scaleup","gcf","common_factors","fa","primeFactors","fb","forEach","indexOf","splice","r","num1","factors","_factor","$f50bd1f2915ed0f2$var$recipeContainer","document","querySelector","$f50bd1f2915ed0f2$var$search","$f50bd1f2915ed0f2$var$ul","$f50bd1f2915ed0f2$var$searchfield","$f50bd1f2915ed0f2$var$paging","$f50bd1f2915ed0f2$var$errorFetch","x","innerHTML","insertAdjacentHTML","$f50bd1f2915ed0f2$var$spinning","el","$f50bd1f2915ed0f2$var$loadingRecipe","obj","html","image_url","title","ingredients","map","val","quantity","unit","description","$f50bd1f2915ed0f2$var$saran","fetch","y","json","console","log","status","data","recipes","addEventListener","preventDefault","e1","style","paddingTop","value","then","temp","target","hasAttribute","Number","getAttribute","provide","catch","message","$f50bd1f2915ed0f2$var$fetcher","hash","location","slice","leo","req","Promise","race","_","reject","setTimeout","ok","record","k","recipe","statusText","$f50bd1f2915ed0f2$var$recipeClickHandler","classList","contains","qu","textContent","updatedIngredients","ingredient","servings","stopPropagation","removeEventListener"],"version":3,"file":"index.e88a32c8.js.map"}